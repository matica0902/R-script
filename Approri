####VERY IMPRESSIVE CAUTION!!!!!!!!!!!!
#同一筆交易 不能出現兩次一模一樣的物品 
例如  A B C A D 就會出現錯誤訊息Error in asMethod(object) : 
  can not coerce list with transactions with duplicated items
把重複的物品拿掉 就會 PASS 方法為使用下列函數!!!去除重複值~~  
  
read.transactions has an rm.duplicates argument to remove those duplicates.
data <-  data[!duplicated(data),] ==>if you want the same recorder.
或
read.transactions("Trans", format = "basket", sep=",", rm.duplicates=TRUE) ==>if your set have been a transaction
或
df3_recoded <- unique(df3_recoded) ==>if your set is a dataframe 


#Skill
make a variable all with zero value then you can get all associate rule in use inspect(rule)
EX: 
data=
V1,V2,V3,V4,V5,V6,V7,V8
1001,a,1,A,10,Long,circle,c1
1002,a,2,F,11,Short,rec,c2
1003,a,3,F,12,Short,trigle,c3
1004,a,3,G,13,Short,circle,c4
1005,a,3,H,14,Long,rec,c5
1006,b,4,J,15,Short,rec,c6
1007,b,4,K,11,Short,trigle,c7
1008,b,5,A,12,Long,circle,c8
1009,b,5,A,12,Short,trigle,c9
1010,b,6,A,15,Short,rec,c10
1011,c,6,A,14,Long,rec,c11
1012,a,1,H,15,Short,rec,c12
1013,a,1,H,16,Long,circle,c13
1014,a,2,H,15,Short,trigle,c14
1015,c,2,K,17,Long,circle,c15
1016,d,3,G,19,Short,trigle,c16
1017,d,3,J,18,Long,trigle,c17
1018,c,4,G,15,Short,rec,c18
1019,a,3,H,14,Long,rec,c5
1020,a,3,H,14,Long,rec,c5
1021,a,3,H,14,Long,rec,c5
1022,a,3,H,14,Long,rec,c5

then you can creat V9="rule"
then the code you can write 
ru02=apriori(tl,parameter=list(support=0.001,confidence=0.05),appearance=list(rhs=c("V9=rule"),default="lhs"))
But maybe the lib have already have the default value that if you dont write rhs=c("V9=rule") maybe have the same result!!

##Code example01 find all (A,B,...,X) patten

Sys.setlocale(locale = "US")
cart01<-read.csv("D:rdata/cbi/sym01.csv",header=FALSE,sep=",",encoding = "UTF-8")
Sys.setlocale(locale = "CHT")

#cart01<-read.csv("c:/Rdata/wuz/wuz_cart1cate01.csv",header=FALSE,sep=",")
str(cart01)
#cart01<-unique(cart01)
##for(i in 1:50){rep(transform(pro01,i=as.factor(pro01[,i])))}
cart01=subset(cart01,select=c(V2,V3,V4,V5,V6,V7))
##  maybe more simple then subset cartr<-cartr[c(3,4,5,6)]
    # fldf<-transform(fl,V1=as.factor(fl$V1))
cart01<-transform(cart01,V1=as.factor(cart01$V2))
cart01<-transform(cart01,V2=as.factor(cart01$V3))
cart01<-transform(cart01,V3=as.factor(cart01$V4))
cart01<-transform(cart01,V4=as.factor(cart01$V5))
cart01<-transform(cart01,V5=as.factor(cart01$V6))
cart01<-transform(cart01,V6=as.factor(cart01$V7))
#Select rule variables again !! 
#********************************************
cart01=subset(cart01,select=c(V1,V3,V5))
#********************************************
str(cart01)

##cartr6<-cartr[,1:6]
##  FUCK it is if cartr$V3 is dataframe  cartr<-cbind(cartr$V3,cartr$V4,cartr$V5,cartr$V6)
##  So must arrange it below

##cartr<-cartr[c(3,4,5,6)]


library(arules)
data<- as(cart01, "transactions")
#VERY GOOD
inspect(data[1:10,])
tl <- as(data, "tidLists")
                 
                                                            
ru02=apriori(tl,parameter=list(support=0.001,confidence=0.05),appearance=list(rhs=c("V5=Long"),default="lhs"))
inspect(ru02)


#We can transfer DF to a list by two steps:
1.Step one  use  as.data.frame(t(df))
afterdf <- as.data.frame(t(df))

2.Step two tranfer to a list  by column direction
cc=as.list(tdf[1:4,]) 

##Review List Extract  by index  EX: list (c(1,2,3),c(2,3),c(4)) are three data of one list you can all index(2,2) by list[[2]][2]
data <- list(
  c("a","b","c","ok"),
  c("a","b"),
  c("a","b","d"),
  c("b","e","ok"),
  c("b","c","e"),
  c("a","d","e","ok"),
  c("a","c"),
  c("a","b","d"),
  c("c","e","ok"),
  c("a","b","d","e")
)

We can call by index 
list[[3]][2]=b
list[[4]][3]=ok
list[[6]][4]=ok
list[3]=c("a","b","d")

